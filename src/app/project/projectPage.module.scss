@use "../shared/styles/mediaQuery.scss" as mq;

@mixin description-text {
  font-size: max(2.5vw, 24px);
  line-height: 1.3;
  word-break: keep-all;
}

@mixin section-wrapper {
  padding: 0 2rem;
}

.heroWrapper {
  @include section-wrapper();
  position: relative;
  margin-top: 60px;
  height: calc(100vh - 60px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  .title {
    text-align: center;
    font-size: max(7vw, 42px);
    text-transform: uppercase;
  }

  .description {
    @include description-text();
    font-size: max(3.5vw, 24px);
    margin-top: 1rem;
    text-align: center;
    font-weight: 350;
  }
}

.problemWrapper {
  position: relative;

  .title {
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 5;
    padding: 2rem;
    height: 120px;
    display: flex;
    justify-content: center;
    font-size: max(3vw, 24px);
    pointer-events: none;
  }

  .problemItemWrapper {
    position: relative;
    height: 100%;
    display: flex;
    align-items: center;
    width: 70vw;
    margin: 0 auto;

    @include mq.mobile {
      width: 100vw;
    }
  }

  .problemItem {
    @include section-wrapper();
    width: 70vw;
    margin: 0 auto;

    display: flex;
    align-items: flex-start;
    position: fixed;
    height: 100vh;
    pointer-events: none;

    @include mq.mobile {
      width: 100vw;
    }

    @mixin problem-box {
      background-color: #248bf5;
      border-radius: 1rem;
      display: flex;
      flex-direction: column;
      max-width: min(50vw, 500px);
      padding: 1rem 1.5rem;
      position: relative;

      @include mq.mobile {
        max-width: 70vw;
      }

      p {
        font-size: max(1.2vw, 20px);
        text-align: center;
        line-height: 1.2;
        word-break: keep-all;
      }
    }

    .problemBoxLeft {
      @include problem-box();
      &::before {
        content: "";
        position: absolute;
        bottom: 15px; /* 말풍선과 꼬리 연결 지점 */
        left: -10px; /* 꼬리 위치 (왼쪽 정렬) */
        border-style: solid;
        border-width: 10px 10px 2px 0; /* 꼬리 삼각형 */
        border-color: transparent #248bf5 transparent #248bf5; /* 꼬리 색상 */
      }
    }

    .problemBoxRight {
      @include problem-box();
      background-color: #fff;

      &::before {
        content: "";
        position: absolute;
        bottom: 15px; /* 말풍선과 꼬리 연결 지점 */
        right: -10px; /* 꼬리 위치 (왼쪽 정렬) */
        border-style: solid;
        border-width: 20px 10px 12px 0; /* 꼬리 삼각형 */
        border-color: transparent transparent #fff #fff;
      }

      p {
        color: #000;
        word-break: keep-all;
      }
    }
  }
}

.mainFeatureWrapper {
  position: relative;
  height: 400vh;

  .title {
    position: fixed;
    width: 100%;
    top: 0;
    z-index: 5;
    padding: 2rem;
    height: 120px;
    display: flex;
    justify-content: center;
    font-size: max(3vw, 24px);
    pointer-events: none;
  }

  .featureListWrapper {
    width: 100%;
    height: 100%;
  }

  .featureItemWrapper {
    width: 100%;
    height: 100vh;

    .featureItem {
      @include section-wrapper();

      position: fixed;
      top: 100px;
      width: 100%;

      h2 {
        font-size: max(2vw, 24px);
        margin: 20px 0;
        width: 100%;
        text-align: center;
      }

      p {
        font-size: max(1.2vw, 20px);
        margin-bottom: 20px;
        white-space: pre-wrap;
        text-align: center;
        word-break: break-all;
        line-height: 1.4;
        word-break: keep-all;
      }

      .imageContainer {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;

        position: relative;
        margin: 30px;

        @include mq.mobile {
          gap: 20px;
          margin: 0;
          flex-direction: column;
        }

        img {
          position: absolute;
          width: 70vw;
          top: 10px;
          border-radius: 24px;
          object-fit: contain;

          @include mq.mobile {
            width: 85vw;
            height: auto;
            position: static;
          }
        }
      }
    }
  }
}

.videoContainer {
  width: auto;
  height: calc(100vh - 400px);

  @include mq.mobile {
    width: 100vw;
    height: auto;
  }
}
